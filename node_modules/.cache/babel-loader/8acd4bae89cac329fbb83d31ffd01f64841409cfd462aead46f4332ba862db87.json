{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steven\\\\Documents\\\\Projects\\\\mplus-1\\\\src\\\\components\\\\DungeonBreakdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './DungeonBreakdown.css';\nimport teamMembers from '../teamMembers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DungeonBreakdown = () => {\n  _s();\n  const [dungeonData, setDungeonData] = useState([]);\n  useEffect(() => {\n    const fetchDungeonData = async () => {\n      const fetchedDungeonData = [];\n      for (const defaultCharacter of teamMembers) {\n        const mainResult = await axios(`https://raider.io/api/v1/characters/profile?region=us&realm=${defaultCharacter.server}&name=${defaultCharacter.name}&fields=mythic_plus_best_runs%3Aall`);\n        const alternateResult = await axios(`https://raider.io/api/v1/characters/profile?region=us&realm=${defaultCharacter.server}&name=${defaultCharacter.name}&fields=mythic_plus_alternate_runs%3Aall`);\n        fetchedDungeonData.push({\n          mainRuns: mainResult.data,\n          alternateRuns: alternateResult.data\n        });\n      }\n      setDungeonData(fetchedDungeonData);\n    };\n    fetchDungeonData();\n  }, []);\n  function formatTime(ms) {\n    const minutes = Math.floor(ms / 60000);\n    const seconds = Math.floor(ms % 60000 / 1000);\n    return `${minutes}m ${seconds}s`;\n  }\n  const dungeonAbbreviations = {\n    //Season 1 DF\n    \"Shadowmoon Burial Grounds\": 'SBG',\n    \"Court of Stars\": 'COS',\n    \"Temple of the Jade Serpent\": 'TJS',\n    \"Halls of Valor\": 'HOV',\n    \"Ruby Life Pools\": 'RLP',\n    \"The Azure Vault\": 'AV',\n    \"The Nokhud Offensive\": 'NO',\n    \"Algeth\\'ar Academy\": 'AA'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"dungeon-breakdown-title\",\n      children: \"Dungeon Breakdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dungeon-breakdown-grid\",\n      children: dungeonData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-dungeons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"member-name\",\n          children: data.mainRuns.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Main Runs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: data.mainRuns.mythic_plus_best_runs.map((run, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dungeon-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dungeon-name\",\n              children: dungeonAbbreviations[run.dungeon]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dungeon-level\",\n              children: [\"+\", run.mythic_level, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dungeon-time\",\n              children: formatTime(run.clear_time_ms)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 23\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Alternate Runs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: data.alternateRuns.mythic_plus_alternate_runs.map((run, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dungeon-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dungeon-name\",\n              children: dungeonAbbreviations[run.dungeon]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dungeon-level\",\n              children: [\"+\", run.mythic_level, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dungeon-time\",\n              children: formatTime(run.clear_time_ms)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 23\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(DungeonBreakdown, \"y/igffev5fMb+BITLUpXUDDQQkM=\");\n_c = DungeonBreakdown;\nexport default DungeonBreakdown;\nvar _c;\n$RefreshReg$(_c, \"DungeonBreakdown\");","map":{"version":3,"names":["React","useState","useEffect","axios","teamMembers","jsxDEV","_jsxDEV","DungeonBreakdown","_s","dungeonData","setDungeonData","fetchDungeonData","fetchedDungeonData","defaultCharacter","mainResult","server","name","alternateResult","push","mainRuns","data","alternateRuns","formatTime","ms","minutes","Math","floor","seconds","dungeonAbbreviations","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","mythic_plus_best_runs","run","i","dungeon","mythic_level","clear_time_ms","mythic_plus_alternate_runs","_c","$RefreshReg$"],"sources":["C:/Users/Steven/Documents/Projects/mplus-1/src/components/DungeonBreakdown.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './DungeonBreakdown.css';\r\nimport teamMembers from '../teamMembers';\r\n\r\nconst DungeonBreakdown = () => {\r\n    const [dungeonData, setDungeonData] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n      const fetchDungeonData = async () => {\r\n        const fetchedDungeonData = [];\r\n    \r\n        for (const defaultCharacter of teamMembers) {\r\n          const mainResult = await axios(\r\n            `https://raider.io/api/v1/characters/profile?region=us&realm=${defaultCharacter.server}&name=${defaultCharacter.name}&fields=mythic_plus_best_runs%3Aall`\r\n          );\r\n    \r\n          const alternateResult = await axios(\r\n            `https://raider.io/api/v1/characters/profile?region=us&realm=${defaultCharacter.server}&name=${defaultCharacter.name}&fields=mythic_plus_alternate_runs%3Aall`\r\n          );\r\n    \r\n          fetchedDungeonData.push({\r\n            mainRuns: mainResult.data,\r\n            alternateRuns: alternateResult.data,\r\n          });\r\n        }\r\n    \r\n        setDungeonData(fetchedDungeonData);\r\n      };\r\n    \r\n      fetchDungeonData();\r\n    }, []);\r\n    \r\n\r\n      function formatTime(ms){\r\n        const minutes = Math.floor(ms / 60000);\r\n        const seconds = Math.floor(ms % 60000 / 1000);\r\n        return `${minutes}m ${seconds}s`;\r\n      }\r\n\r\n      const dungeonAbbreviations = {\r\n        //Season 1 DF\r\n        \"Shadowmoon Burial Grounds\": 'SBG',\r\n        \"Court of Stars\": 'COS',\r\n        \"Temple of the Jade Serpent\": 'TJS',\r\n        \"Halls of Valor\":'HOV',\r\n        \"Ruby Life Pools\":'RLP',\r\n        \"The Azure Vault\":'AV',\r\n        \"The Nokhud Offensive\":'NO',\r\n        \"Algeth\\'ar Academy\":'AA'\r\n      };\r\n\r\n      return (\r\n        <div>\r\n          <h2 className=\"dungeon-breakdown-title\">Dungeon Breakdown</h2>\r\n          <div className=\"dungeon-breakdown-grid\">\r\n            {dungeonData.map((data, index) => (\r\n              <div key={index} className=\"member-dungeons\">\r\n                <div className=\"member-name\">{data.mainRuns.name}</div>\r\n                <h3>Main Runs</h3>\r\n                <ul>\r\n                  {data.mainRuns.mythic_plus_best_runs.map((run, i) => (\r\n                    <div key={i} className=\"dungeon-info\">\r\n                      <span className=\"dungeon-name\">{dungeonAbbreviations[run.dungeon]}</span>\r\n                      <span className=\"dungeon-level\">+{run.mythic_level}:</span>\r\n                      <span className=\"dungeon-time\">{formatTime(run.clear_time_ms)}</span>\r\n                    </div>\r\n                  ))}\r\n                </ul>\r\n                <h3>Alternate Runs</h3>\r\n                <ul>\r\n                  {data.alternateRuns.mythic_plus_alternate_runs.map((run, i) => (\r\n                    <div key={i} className=\"dungeon-info\">\r\n                      <span className=\"dungeon-name\">{dungeonAbbreviations[run.dungeon]}</span>\r\n                      <span className=\"dungeon-level\">+{run.mythic_level}:</span>\r\n                      <span className=\"dungeon-time\">{formatTime(run.clear_time_ms)}</span>\r\n                    </div>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n      \r\n\r\n\r\n};\r\n\r\nexport default DungeonBreakdown;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}