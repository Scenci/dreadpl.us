{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steven\\\\Documents\\\\Projects\\\\mplus-1\\\\src\\\\components\\\\DungeonBreakdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './DungeonBreakdown.css';\nimport teamMembers from '../teamMembers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DungeonBreakdown = () => {\n  _s();\n  const [dungeonData, setDungeonData] = useState([]);\n  useEffect(() => {\n    const fetchDungeonData = async () => {\n      const fetchedDungeonData = [];\n      for (const defaultCharacter of teamMembers) {\n        const result = await axios(`https:raider.io/api/v1/characters/profile?region=us&realm=${defaultCharacter.server}&name=${defaultCharacter.name}&fields=mythic_plus_best_runs%3Aall`);\n        console.log(\"Dungeon Data: \", result);\n        fetchedDungeonData.push(result.data);\n      }\n      setDungeonData(fetchedDungeonData);\n    };\n    fetchDungeonData();\n  }, []);\n  function formatTime(ms) {\n    const minutes = Math.floor(ms / 60000);\n    const seconds = Math.floor(ms % 60000 / 1000);\n    const miliseconds = ms % 1000;\n    return `${minutes}m ${seconds}s ${miliseconds}ms`;\n  }\n  const dungeonAbbreviations = {\n    \"Shadowmoon Burial Grounds\": 'SBG',\n    \"Court of Stars\": 'COS',\n    \"Temple of the Jade Serpent\": 'TJS',\n    \"Halls of Valor\": 'HOV',\n    \"Ruby Life Pools\": 'RLP',\n    \"The Azure Vault\": 'AV',\n    \"The Nokhud Offensive\": 'NO',\n    \"Algeth\\'ar Academy\": 'AA'\n\n    // Add other dungeon names and their abbreviations here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dungeon Breakdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), dungeonData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.mythic_plus_best_runs.map((run, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [run.dungeon, \" - Level: \", run.mythic_level, \" - Time: \", run.clear_time_ms, \" ms\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(DungeonBreakdown, \"y/igffev5fMb+BITLUpXUDDQQkM=\");\n_c = DungeonBreakdown;\nexport default DungeonBreakdown;\nvar _c;\n$RefreshReg$(_c, \"DungeonBreakdown\");","map":{"version":3,"names":["React","useState","useEffect","axios","teamMembers","jsxDEV","_jsxDEV","DungeonBreakdown","_s","dungeonData","setDungeonData","fetchDungeonData","fetchedDungeonData","defaultCharacter","result","server","name","console","log","push","data","formatTime","ms","minutes","Math","floor","seconds","miliseconds","dungeonAbbreviations","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","mythic_plus_best_runs","run","i","dungeon","mythic_level","clear_time_ms","_c","$RefreshReg$"],"sources":["C:/Users/Steven/Documents/Projects/mplus-1/src/components/DungeonBreakdown.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './DungeonBreakdown.css';\r\nimport teamMembers from '../teamMembers';\r\n\r\nconst DungeonBreakdown = () => {\r\n    const [dungeonData, setDungeonData] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n     const fetchDungeonData = async () => {\r\n        const fetchedDungeonData = [];\r\n\r\n         for (const defaultCharacter of teamMembers) {\r\n            const result = await axios(\r\n              `https:raider.io/api/v1/characters/profile?region=us&realm=${defaultCharacter.server}&name=${defaultCharacter.name}&fields=mythic_plus_best_runs%3Aall`\r\n            );\r\n            console.log(\"Dungeon Data: \", result);\r\n            fetchedDungeonData.push(result.data);\r\n        }\r\n        setDungeonData(fetchedDungeonData);\r\n      };\r\n        fetchDungeonData();\r\n      }, []);\r\n\r\n      function formatTime(ms){\r\n        const minutes = Math.floor(ms / 60000);\r\n        const seconds = Math.floor(ms % 60000 / 1000);\r\n        const miliseconds = ms % 1000;\r\n\r\n        return `${minutes}m ${seconds}s ${miliseconds}ms`;\r\n      }\r\n\r\n      const dungeonAbbreviations = {\r\n        \"Shadowmoon Burial Grounds\": 'SBG',\r\n        \"Court of Stars\": 'COS',\r\n        \"Temple of the Jade Serpent\": 'TJS',\r\n        \"Halls of Valor\":'HOV',\r\n        \"Ruby Life Pools\":'RLP',\r\n        \"The Azure Vault\":'AV',\r\n        \"The Nokhud Offensive\":'NO',\r\n        \"Algeth\\'ar Academy\":'AA'\r\n\r\n      \r\n        // Add other dungeon names and their abbreviations here\r\n      };\r\n\r\n      return (\r\n        <div>\r\n          <h2>Dungeon Breakdown</h2>\r\n          {dungeonData.map((data, index) => (\r\n            <div key={index}>\r\n              <h3>{data.name}</h3>\r\n              <ul>\r\n                {data.mythic_plus_best_runs.map((run, i) => (\r\n                  <li key={i}>\r\n                    {run.dungeon} - Level: {run.mythic_level} - Time: {run.clear_time_ms} ms\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n\r\n\r\n};\r\n\r\nexport default DungeonBreakdown;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}