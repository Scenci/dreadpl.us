{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steven\\\\Documents\\\\Projects\\\\mplus-1\\\\src\\\\components\\\\DungeonBreakdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './DungeonBreakdown.css';\nimport teamMembers from '../teamMembers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DungeonBreakdown = () => {\n  _s();\n  const [dungeonData, setDungeonData] = useState([]);\n  const [alternateDungeonData, setAlternateDungeonData] = useState([]);\n  const fetchDungeonData = async () => {\n    const fetchedDungeonData = [];\n    const fetchedAlternateDungeonData = [];\n    for (const defaultCharacter of teamMembers) {\n      const mainResult = await axios(`https:raider.io/api/v1/characters/profile?region=us&realm=${defaultCharacter.server}&name=${defaultCharacter.name}&fields=mythic_plus_best_runs%3Aall`);\n      fetchedDungeonData.push(mainResult.data);\n      const alternateResult = await axios(`https:raider.io/api/v1/characters/profile?region=us&realm=${defaultCharacter.server}&name=${defaultCharacter.name}&fields=mythic_plus_alternate_runs%3Aall`);\n      fetchedAlternateDungeonData.push(alternateResult.data);\n    }\n    setDungeonData(fetchedDungeonData);\n    setAlternateDungeonData(fetchedAlternateDungeonData);\n  };\n  function formatTime(ms) {\n    const minutes = Math.floor(ms / 60000);\n    const seconds = Math.floor(ms % 60000 / 1000);\n    return `${minutes}m ${seconds}s`;\n  }\n  const dungeonAbbreviations = {\n    //Season 1 DF\n    \"Shadowmoon Burial Grounds\": 'SBG',\n    \"Court of Stars\": 'COS',\n    \"Temple of the Jade Serpent\": 'TJS',\n    \"Halls of Valor\": 'HOV',\n    \"Ruby Life Pools\": 'RLP',\n    \"The Azure Vault\": 'AV',\n    \"The Nokhud Offensive\": 'NO',\n    \"Algeth\\'ar Academy\": 'AA'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"dungeon-breakdown-title\",\n      children: \"Dungeon Breakdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dungeon-breakdown-grid\",\n      children: dungeonData.map((data, index) => {\n        var _alternateDungeonData;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"member-dungeons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-name\",\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"run-types\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"main-runs\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Main Runs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: data.mythic_plus_best_runs.map((run, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dungeon-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"dungeon-name\",\n                    children: dungeonAbbreviations[run.dungeon]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"dungeon-level\",\n                    children: [\"+\", run.mythic_level, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 27\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alternate-runs\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Alternate Runs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: (_alternateDungeonData = alternateDungeonData[index]) === null || _alternateDungeonData === void 0 ? void 0 : _alternateDungeonData.mythic_plus_alternate_runs.map((run, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dungeon-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"dungeon-name\",\n                    children: dungeonAbbreviations[run.dungeon]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"dungeon-level\",\n                    children: [\"+\", run.mythic_level, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 27\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(DungeonBreakdown, \"Zi5boiy/E+LON/v9w6N5HQYlxwU=\");\n_c = DungeonBreakdown;\nexport default DungeonBreakdown;\nvar _c;\n$RefreshReg$(_c, \"DungeonBreakdown\");","map":{"version":3,"names":["React","useState","useEffect","axios","teamMembers","jsxDEV","_jsxDEV","DungeonBreakdown","_s","dungeonData","setDungeonData","alternateDungeonData","setAlternateDungeonData","fetchDungeonData","fetchedDungeonData","fetchedAlternateDungeonData","defaultCharacter","mainResult","server","name","push","data","alternateResult","formatTime","ms","minutes","Math","floor","seconds","dungeonAbbreviations","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_alternateDungeonData","mythic_plus_best_runs","run","i","dungeon","mythic_level","mythic_plus_alternate_runs","_c","$RefreshReg$"],"sources":["C:/Users/Steven/Documents/Projects/mplus-1/src/components/DungeonBreakdown.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './DungeonBreakdown.css';\r\nimport teamMembers from '../teamMembers';\r\n\r\nconst DungeonBreakdown = () => {\r\n    const [dungeonData, setDungeonData] = useState([]);\r\n    const [alternateDungeonData, setAlternateDungeonData] = useState([]);\r\n\r\n\r\n    const fetchDungeonData = async () => {\r\n      const fetchedDungeonData = [];\r\n      const fetchedAlternateDungeonData = [];\r\n    \r\n      for (const defaultCharacter of teamMembers) {\r\n        const mainResult = await axios(\r\n          `https:raider.io/api/v1/characters/profile?region=us&realm=${defaultCharacter.server}&name=${defaultCharacter.name}&fields=mythic_plus_best_runs%3Aall`\r\n        );\r\n        fetchedDungeonData.push(mainResult.data);\r\n    \r\n        const alternateResult = await axios(\r\n          `https:raider.io/api/v1/characters/profile?region=us&realm=${defaultCharacter.server}&name=${defaultCharacter.name}&fields=mythic_plus_alternate_runs%3Aall`\r\n        );\r\n        fetchedAlternateDungeonData.push(alternateResult.data);\r\n      }\r\n    \r\n      setDungeonData(fetchedDungeonData);\r\n      setAlternateDungeonData(fetchedAlternateDungeonData);\r\n    };\r\n    \r\n\r\n      function formatTime(ms){\r\n        const minutes = Math.floor(ms / 60000);\r\n        const seconds = Math.floor(ms % 60000 / 1000);\r\n        return `${minutes}m ${seconds}s`;\r\n      }\r\n\r\n      const dungeonAbbreviations = {\r\n        //Season 1 DF\r\n        \"Shadowmoon Burial Grounds\": 'SBG',\r\n        \"Court of Stars\": 'COS',\r\n        \"Temple of the Jade Serpent\": 'TJS',\r\n        \"Halls of Valor\":'HOV',\r\n        \"Ruby Life Pools\":'RLP',\r\n        \"The Azure Vault\":'AV',\r\n        \"The Nokhud Offensive\":'NO',\r\n        \"Algeth\\'ar Academy\":'AA'\r\n      };\r\n\r\n      return (\r\n        <div>\r\n          <h2 className=\"dungeon-breakdown-title\">Dungeon Breakdown</h2>\r\n          <div className=\"dungeon-breakdown-grid\">\r\n            {dungeonData.map((data, index) => (\r\n              <div key={index} className=\"member-dungeons\">\r\n                <div className=\"member-name\">{data.name}</div>\r\n                <div className=\"run-types\">\r\n                  <div className=\"main-runs\">\r\n                    <h3>Main Runs</h3>\r\n                    <ul>\r\n                      {data.mythic_plus_best_runs.map((run, i) => (\r\n                        <div key={i} className=\"dungeon-info\">\r\n                          <span className=\"dungeon-name\">{dungeonAbbreviations[run.dungeon]}</span>\r\n                          <span className=\"dungeon-level\">+{run.mythic_level}:</span>\r\n                        </div>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"alternate-runs\">\r\n                    <h3>Alternate Runs</h3>\r\n                    <ul>\r\n                      {alternateDungeonData[index]?.mythic_plus_alternate_runs.map((run, i) => (\r\n                        <div key={i} className=\"dungeon-info\">\r\n                          <span className=\"dungeon-name\">{dungeonAbbreviations[run.dungeon]}</span>\r\n                          <span className=\"dungeon-level\">+{run.mythic_level}:</span>\r\n                        </div>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n      \r\n      \r\n\r\n\r\n};\r\n\r\nexport default DungeonBreakdown;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}